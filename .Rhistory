View(test)
View(test)
test<-read.fwf(file="./Q5.for",widths =4)
View(test)
View(test)
test<-read.fwf(file="./Q5.for",colnames(Nino34)
test<-read.fwf(file="./Q5.for",colnames(Nino34))
test<-read.fwf(file="./Q5.for",widths = c(9,8,8))
test<-read.table(file = "./Q5.for")
View(test)
View(test)
test<-read.table(file = "./Q5.for")
test<-file("./Q5.for")
head(test)
tail(file="./Q5.for")
test="./Q5.for"
test
test<-read.table(file = "./Q5.for",skip=4)
setwd("~/R/Project_Cleaning_data/UCI HAR Dataset")
list.files()
data_subject_test<-read.table("./test/subject_test.txt")
View(data_subject_test)
View(data_subject_test)
# create a data frame with subjects identies
data_subject_test<-read.table("./test/subject_test.txt")
#subject_id<-data_subject_test[,1]
#data frame with all label activities
data_labels_test<-read.table("./test//y_test.txt")
#label_activity<-data_labels_test[,1]
# data frame with test set
data_test_set<-read.table("./test//X_test.txt")
#
View(data_test_set)
View(data_test_set)
View(data_subject_test)
View(data_subject_test)
View(data_test_set)
View(data_test_set)
?cbind
cocotte<-cbin(data_subject_test,data_labels_test,data_test_set)
cocotte<-cbind(data_subject_test,data_labels_test,data_test_set)
View(cocotte)
View(cocotte)
?colnames
data<-col_name_feature<-read.table("./features.txt")
View(col_name_feature)
View(col_name_feature)
?colnames
vector_name<-col_name_feature[,1]
vector_name
vector_name<-col_name_feature[,2]
vector_name
test<-colnames(data_test_set)<-vector_name
data.frame(test<-colnames(data_test_set)<-vector_name)
as.data.frame(test<-colnames(data_test_set)<-vector_name)
as.data.frame(test<-colnames(data_test_set)<-vector_name))
test<-as.data.frame(test<-colnames(data_test_set)<-vector_name)
View(test)
View(test)
test<-vector()
test<-colnames(data_test_set,vector_name)
dim(vector_name)
vector_name<-col_name_feature[,2]
vector_name
dim(vector_name)
length(vector_name)
dim(data_test_set)
getwd()
## First we wil create a data framewith all test informations
# create a data frame with subjects identies
data_subject_test<-read.table("./test/subject_test.txt")
#data frame with all label activities
data_labels_test<-read.table("./test//y_test.txt")
# data frame with test set
data_test_set<-read.table("./test//X_test.txt")
result_test<-cbind(data_subject_test,data_labels_test,data_test_set)
## Then we will create a data   frame with all train informations
# create a data frame with subjects identies
data_subject_train<-read.table("./train/subject_train.txt")
#data frame with all label activities
data_labels_train<-read.table("./train//y_train.txt")
# data frame with train set
data_train_set<-read.table("./train//X_train.txt")
result_train<-cbind(data_subject_train,data_labels_train,data_train_set)
## now we can merge the result_test and result_train data frames
merge_test_train<-rbind(result_test,result_train)
?regexec
test<-("laet","toto","minou")
test<-c("laet","toto","minou")
?regexpr
?regexpr(test,"la")
regexpr(test,"la")
grep(x = test,x = tes)
grep(x = test,x = test)
grep("la",test)
grep("nou",test)
names<-read.table("./features.txt")
View(names)
View(names)
typeof(names)
grep("mean",names)
grep("Mean",names)
grep("mean",as.vector(names))
View(names)
View(names)
names<-names[,1]
names
names<-read.table("./features.txt")
View(names)
View(names)
names<-names[,2]
names<-as.vector(names)
names
grep("mean",names)
#typeof(names)
typeof(names)
names[3]
names[7]
names[81]
View(data_subject_train)
## First we wil create a data framewith all test informations
# create a data frame with subjects identies
data_subject_test<-read.table("./test/subject_test.txt")
#data frame with all label activities
data_labels_test<-read.table("./test//y_test.txt")
# data frame with test set
data_test_set<-read.table("./test//X_test.txt")
result_test<-cbind(data_subject_test,data_labels_test,data_test_set)
## Then we will create a data   frame with all train informations
# create a data frame with subjects identies
data_subject_train<-read.table("./train/subject_train.txt")
#data frame with all label activities
data_labels_train<-read.table("./train//y_train.txt")
# data frame with train set
data_train_set<-read.table("./train//X_train.txt")
result_train<-cbind(data_subject_train,data_labels_train,data_train_set)
## now we can merge the result_test and result_train data frames
merge_test_train<-rbind(result_test,result_train)
## set column names with variables in features.txt
names<-read.table("./features.txt")
# select the 2nd column with variavle names
names<-names[,2]
names<-as.vector(names)
indice_mean<-grep("mean",names)
#create a vector title_column with all the titles which contains "mean"
for i in indice_mean
{column_title <- c(column_title,names[i])}
#extract relvant column from the merge_test_train data frame
columlumn_title<-vector()
for i in indice_mean
{column_title <- c(column_title,names[i])}
for i in indice_mean
{column_title <- c(column_title,names[i])}
column_title<-vector()
for i in indice_mean
{column_title <- c(column_title,names[i])}
column_title<-vector()
for i in indice_mean
{column_title <- c(column_title,names[i])}
column_title<-vector()
for (i in indice_mean)
{column_title <- c(column_title,names[i])}
column_title<-vector()
for(i in indice_mean)
{column_title <- c(column_title,names[i])}
for i in indicd
for i in indice_mean
for s in indice_mean
## First we wil create a data framewith all test informations
# create a data frame with subjects identies
data_subject_test<-read.table("./test/subject_test.txt")
#data frame with all label activities
data_labels_test<-read.table("./test//y_test.txt")
# data frame with test set
data_test_set<-read.table("./test//X_test.txt")
result_test<-cbind(data_subject_test,data_labels_test,data_test_set)
## Then we will create a data   frame with all train informations
# create a data frame with subjects identies
data_subject_train<-read.table("./train/subject_train.txt")
#data frame with all label activities
data_labels_train<-read.table("./train//y_train.txt")
# data frame with train set
data_train_set<-read.table("./train//X_train.txt")
result_train<-cbind(data_subject_train,data_labels_train,data_train_set)
## now we can merge the result_test and result_train data frames
merge_test_train<-rbind(result_test,result_train)
## set column names with variables in features.txt
names<-read.table("./features.txt")
# select the 2nd column with variavle names
names<-names[,2]
names<-as.vector(names)
indice_mean<-grep("mean",names)
#create a vector title_column with all the titles which contains "mean"
column_title<-vector()
for (i in indice_mean)
{column_title <- c(column_title,names[i])}
#extract relvant column from the merge_test_train data frame
column_title
data_test_set[,indice_mean]
length(column_title)
dim(data_test_set[,indice_mean])
?colnames
relevant_test_frame<-data_test_set[,indice_mean]
test<-colnames(relevant_test_frame,column_title)
colnames(relevant_test_frame)<-column_title
View(relevant_test_frame)
View(relevant_test_frame)
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
column_title
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
View(relevant)
View(relevant)
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
View(merge_test_train)
View(merge_test_train)
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
View(relevant)
View(relevant)
merge_test_train[1,c(4,1)]
merge_test_train[1,c(4,1,7,2)]
View(merge_test_train)
View(merge_test_train)
merge_test_train[1,4]
colnames(merge_test_train[1,4])
colnames(merge_test_train[1,2])
merge_test_train[1,2]
merge_test_train[1,3]
merge_test_train[1,c(3,5)]
merge_test_train[1,c(5,3)]
test<-("toto","tata","bibi")
test<-c("toto","tata","bibi")
grep(test,c("toto","bibi"))
colnames(merge_test_train)[1]<-"id"
View(merge_test_train)
View(merge_test_train)
?grep
colnames(merge_test_train)[c(1,3)]<-c("pouet","test")
View(merge_test_train)
View(merge_test_train)
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
View(merge_test_train)
View(merge_test_train)
colnames(merge_test_train)[c(1,2,indices)]<-c("id_subject","label",column_title)
colnames(merge_test_train)[c(1,2,all_indices)]<-c("id_subject","label",column_title)
View(merge_test_train)
View(merge_test_train)
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
length(all_indices)
length(column_title)
colnames(merge_test_train)[all_indices]<-column_title
colnames(merge_test_train)[all_indices]<-column_title
source('~/.active-rstudio-document')
colnames(merge_test_train)[all_indices]<-column_title
View(merge_test_train)
View(merge_test_train)
## First we wil create a data framewith all test informations
# create a data frame with subjects identies
data_subject_test<-read.table("./test/subject_test.txt")
#data frame with all label activities
data_labels_test<-read.table("./test//y_test.txt")
# data frame with test set
data_test_set<-read.table("./test//X_test.txt")
result_test<-cbind(data_subject_test,data_labels_test,data_test_set)
## Then we will create a data   frame with all train informations
# create a data frame with subjects identies
data_subject_train<-read.table("./train/subject_train.txt")
#data frame with all label activities
data_labels_train<-read.table("./train//y_train.txt")
# data frame with train set
data_train_set<-read.table("./train//X_train.txt")
result_train<-cbind(data_subject_train,data_labels_train,data_train_set)
## now we can merge the result_test and result_train data frames
merge_test_train<-rbind(result_test,result_train)
## set column names with variables in features.txt
names<-read.table("./features.txt")
# select the 2nd column with variavle names
names<-names[,2]
names<-as.vector(names)
indice_mean<-grep("mean",names)
#create a vector title_column with all the titles which contains "mean"
column_title<-vector();id<-vector();label<-vector()
for (i in indice_mean)
{column_title <- c(column_title,names[i])}
indice_std<-grep("std",names)
#create a vector title_column with all the titles which contains "std"
for (i in indice_std)
{column_title <- c(column_title,names[i])}
all_indices<-c(indice_mean,indice_std)
merge_test_train<-merge_test_train[,all_indices]
colnames(merge_test_train)[all_indices]<-column_title
colnames(merge_test_train)[c(4,7)]<-c("test1","test2")
View(merge_test_train)
View(merge_test_train)
## First we wil create a data framewith all test informations
# create a data frame with subjects identies
data_subject_test<-read.table("./test/subject_test.txt")
#data frame with all label activities
data_labels_test<-read.table("./test//y_test.txt")
# data frame with test set
data_test_set<-read.table("./test//X_test.txt")
result_test<-cbind(data_subject_test,data_labels_test,data_test_set)
## Then we will create a data   frame with all train informations
# create a data frame with subjects identies
data_subject_train<-read.table("./train/subject_train.txt")
#data frame with all label activities
data_labels_train<-read.table("./train//y_train.txt")
# data frame with train set
data_train_set<-read.table("./train//X_train.txt")
result_train<-cbind(data_subject_train,data_labels_train,data_train_set)
## now we can merge the result_test and result_train data frames
merge_test_train<-rbind(result_test,result_train)
View(merge_test_train)
View(merge_test_train)
colnames(merge_test_train)
merge_test_train<-merge_test_train[,all_indices]
merge_test_train<-merge_test_train[,all_indices]
all_indices<-c(indice_mean,indice_std)
merge_test_train<-merge_test_train[,all_indices]
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
dim(merge_test_train)
dim(c("id_subject","label",column_title))
lenght(c("id_subject","label",column_title))
length(c("id_subject","label",column_title))
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
View(merge_test_train)
View(merge_test_train)
## First we wil create a data framewith all test informations
# create a data frame with subjects identies
data_subject_test<-read.table("./test/subject_test.txt")
#data frame with all label activities
data_labels_test<-read.table("./test//y_test.txt")
# data frame with test set
data_test_set<-read.table("./test//X_test.txt")
result_test<-cbind(data_subject_test,data_labels_test,data_test_set)
## Then we will create a data   frame with all train informations
# create a data frame with subjects identies
data_subject_train<-read.table("./train/subject_train.txt")
#data frame with all label activities
data_labels_train<-read.table("./train//y_train.txt")
# data frame with train set
data_train_set<-read.table("./train//X_train.txt")
result_train<-cbind(data_subject_train,data_labels_train,data_train_set)
## now we can merge the result_test and result_train data frames
merge_test_train<-rbind(result_test,result_train)
## set column names with variables in features.txt
names<-read.table("./features.txt")
# select the 2nd column with variavle names
names<-names[,2]
names<-as.vector(names)
indice_mean<-grep("mean",names)
#create a vector title_column with all the titles which contains "mean"
column_title<-vector();id<-vector();label<-vector()
for (i in indice_mean)
{column_title <- c(column_title,names[i])}
indice_std<-grep("std",names)
#create a vector title_column with all the titles which contains "std"
for (i in indice_std)
{column_title <- c(column_title,names[i])}
all_indices<-c(indice_mean,indice_std)
sapply(all_indices,function(x) x+2)
merge_test_train<-merge_test_train[,c(1,2,all_indices)]
colnames(merge_test_train)<-c("id_subject","label",column_title)
View(merge_test_train)
View(merge_test_train)
View(result_train)
View(result_train)
View(data_test_set)
View(data_test_set)
View(result_test)
View(result_test)
?cbind
dim(data_test_set)
dim(data_train_set)
View(result_test)
View(result_test)
View(result_test)
View(result_test)
View(merge_test_train)
View(merge_test_train)
all_indices
sapply(all_indices,fun(x) x+2)
sapply(all_indices,fun(x)<-x+2)
sapply(all_indices,function(x) x+2)
all_indices
source('~/R/Project_Cleaning_data/UCI HAR Dataset/merge_test_train_sets.R')
View(merge_test_train)
View(merge_test_train)
?gsub
?gsub
?lapply
colnames(merge_test_train)
activity_labels<-read.table("./activity_labels.txt")
View(activity_labels)
View(activity_labels)
merge_test_train$label
sapply(merge_test_train$label fun <- activity_labels[l])
sapply(merge_test_train$label fun x <- activity_labels[x])
sapply(merge_test_train$label, fun x <- activity_labels[x])
(sapply(merge_test_train$label, fun (x) <- activity_labels[x])
(sapply(merge_test_train$label, fun (x) activity_labels[x])
(sapply(merge_test_train$label, function (x) activity_labels[x])
sapply(merge_test_train$label, function (x) activity_labels[x])
View(merge_test_train)
View(merge_test_train)
sapply(merge_test_train$label, function (x) activity_label[x])
sapply(merge_test_train$label, function (x) activity_labels[x])
View(merge_test_train)
View(merge_test_train)
activity_labels<-read.table("./activity_labels.txt")
name_lable<-activity_labels[,2]
sapply(merge_test_train$label, function (x) activity_labels[x])
View(activity_labels)
View(activity_labels)
name_lable<-vector(activity_labels[,2])
name_label<-vector(activity_labels[,2])
name_lable
typeof(name_lable)
View(activity_labels)
View(activity_labels)
activity_labels<-read.table("./activity_labels.txt")
name_label<-vector(activity_labels[2])
sapply(merge_test_train$label, function (x) activity_labels[x])
View(activity_labels)
View(activity_labels)
name_label<-activity_labels[,2]
vector(name_label)
activity_labels<-as.integer(activity_labels[,2])
activity_labels<-read.table("./activity_labels.txt")
View(activity_labels)
View(activity_labels)
name_label<-as.vector(activity_labels[,2])
name_label
sapply(merge_test_train$label, function (x) activity_labels[x])
sapply(merge_test_train$label, function (x) name[x])
sapply(merge_test_train$label, function (x) name_label[x])
merge_test_train$label<-name_label
source('~/.active-rstudio-document')
View(merge_test_train)
View(merge_test_train)
library(plyr)
library(dplyr)
library(dplyr)
test<-merge_test_train
View(merge_test_train)
View(merge_test_train)
test1<-group_by(test,id_subject,label)
View(test1)
View(test1)
?tailnum
View(test1)
View(test1)
colnames(test1)
column_title
test2<-summarize(test1,mean(column_title))
View(test2)
View(test2)
new_merge_test_train<-group_by(merge_test_train,id_subject,label,summarise_each(funs = (mean))
new_merge_test_train<-group_by(merge_test_train,id_subject,label,summarise_each(funs(mean))
?group_by
new_merge_test_train<-group_by(merge_test_train,id_subject,label)
new_merge_test_train<-merge_test_train
new_merge_test_train %>% group_by(id,label) %>% summarise_each(funs(mean))
new_merge_test_train<-merge_test_train
new_merge_test_train %>% group_by(id_subject,label) %>% summarise_each(funs(mean))
final_data<-new_merge_test_train %>% group_by(id_subject,label) %>% summarise_each(funs(mean))
View(final_data)
View(final_data)
write.table("./test.txt",row.names = FALSE)
getwd
getwd()
list.files()
head(test)
?write.table
write.table(final_data,file="./final.txt",row.name=FALSE)
head(./final_data.txt)
write.table(final_data,file="./final.txt",row.name=FALSE,sep=" ")
write.table(final_data,file="./final.txt",row.name=FALSE,sep="\t")*
write.table(final_data,file="./final.txt",row.name=FALSE,sep="\t")
write.table(final_data,file="./final.txt",row.name=FALSE,sep=" ")
test4<-read.table('./final.txt',sep="")
View(test4)
View(test4)
test4<-read.table('./final.txt')
View(test4)
View(test4)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",destfile = "./plop")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",destfile = "./plop",method = "curl")
getwd()
?unzip
column_title
names
column_title
names
source('~/.active-rstudio-document')
View(final_data)
View(final_data)
library(dplyr)
head(final_data)
dplyr::
colnames(final_data)
View(final_data)
View(final_data)
colnames(final_data)
for (i in column_title) {print i \n}
for (i in column_title) {print (i \n)}
for (i in column_title) {print (i)}
for (i in colnames(final_data)) {print (i)}
View(final_data)
View(final_data)
